Models of Computation
    NAND is functionally complete
        x -> [any bool func] -> y
        easy
    
    Von Neumann
        ↓ Stack
        ↑ Heap               <---sp---
        ---------------------        |
        Globals                     ALU
        ---------------------
        Literals (constants)     Registers
        ---------------------        |
        Text/Code            <---pc---

    NAND -> Von Neumann
    Perceptron -> Neural network

    CPU (most run on these two chipsets)
    intel
    ARM

    Dev container:
    ctrl+shift+p
    

    Models of Computation
                        NOR
    Classical Computer (NAND) -> Von Neumann Machine
                                 Harvard Architecture

    Harvard Architecture
        Stack ↓
        Heap ↑

        Globals
        ---------------------
        Literals              ----
        ---------------------     |--> ROM
        Code                  ----

    Neural Network (Perceptron -> Neural net)

    Probabilistic                # leaf cases ~4^n
        x=1 with prob .3                p=1
        7 with prob .6           /       |      \
        8 with prob .1       .3         .6          .1
        n loops             x=1         x=7         x=8
                                    /     \
                                .3           .3
                                y=0         y=1
        Probabilistic
            Useful
            Computationally expensive
            Except of a quantum computer

            2^256
                ↑
        k=0... n-1 with p=1/n
        if k decrypts message m
        then
            y=k
        else
            y=0
        y=k/n


Programming Models
    (Language Paradigms)
    Procerdural
    Functional
    Logic/Constraint
    Object oriented

    CISC instruction set
     ______
    | RISC | <--- CISC
    |10,000|   PC
    |______|

    Don't have to run sequentially, can be run in parallel

    Functional programming style
    x  \        = a
         > g(x, y)  \
    y  /              \
             = b        i(a, b) --> result
    z --- h(z)      /

    What is a function
        In functional programming, functions are:
        • For a set of inputs x0, x1, ..., xn-1
            f(x0, .., xn-1)
        • It can be completed
        • Result is the same when the inputs are the same
            ↓ return value
    





ChatGPT:
What are some languages that emphasize functional programming style?
